{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/components/admin/admin.component.pug","webpack:///./src/app/components/home/home.component.pug","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/main-page/main-page.component.pug","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin/admin.component.sass","webpack:///./src/app/components/admin/admin.component.ts","webpack:///./src/app/components/home/home.component.sass","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.sass","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/register/register.component.sass","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/user/user.component.sass","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/main-page/main-page.component.sass","webpack:///./src/app/main-page/main-page.component.ts","webpack:///./src/app/shared/interceptors/auth.interceptor.ts","webpack:///./src/app/shared/models/login-info.model.ts","webpack:///./src/app/shared/models/sign-up-info.model.ts","webpack:///./src/app/shared/services/auth/auth.service.ts","webpack:///./src/app/shared/services/auth/token-storage.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <app-main-page></app-main-page>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">grokonez</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav\\\" routerLinkActive=\\\"active\\\">\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"home\\\">Home</a></li>\\n      <li *ngIf=\\\"authority === 'user'\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"user\\\">User Board</a>\\n      </li>\\n      <li *ngIf=\\\"authority === 'admin'\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"admin\\\">Admin Board</a>\\n      </li>\\n      <li *ngIf=\\\"!authority\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"login\\\">Login</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"h4 Content from server\\ndiv {{board}} {{errorMessage}}\\n\\n\\n\\n\"","module.exports = \"div(*ngIf='isLoggedIn(); else loggedOut')\\n  h5 Your Information\\n  p\\n    strong Username:\\n    span {{info.username}}\\n      br\\n    strong Roles:\\n    span {{info.authorities}}\\n      br\\n    strong Token:\\n    span {{info.token}}\\n      br\\n  button( (click)=\\\"logOut()\\\" ) Logout\\n\\nng-template(#loggedOut).\\n  Please login.\\n\\n\"","module.exports = \"<div *ngIf=\\\"isLoggedIn; else loggedOut\\\">\\n  Logged is as {{roles}}\\n</div>\\n\\n<ng-template #loggedOut>\\n  <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\" required />\\n        <div *ngIf=\\\"f.submitted && username.invalid\\\">\\n          <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" #password=\\\"ngModel\\\"\\n               required minlength=\\\"4\\\" />\\n        <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n          <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n          <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 4 characters</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\">Login</button>\\n        <div *ngIf=\\\"f.submitted && isLoginFailed\\\" class=\\\"alert alert-danger\\\">\\n          Login failed: {{errorMessage}}\\n        </div>\\n      </div>\\n    </form>\\n    <hr />\\n    <p>Don't have an account?</p>\\n    <a href=\\\"signup\\\" class=\\\"btn btn-success\\\">Sign Up</a>\\n  </div>\\n</ng-template>\\n\"","module.exports = \"<div *ngIf=\\\"isSignedUp; else signupForm\\\">\\n  Your registration is successful. Please login!\\n</div>\\n\\n<ng-template #signupForm>\\n  <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"firstName\\\">Your first name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" id=\\\"firstName\\\" [(ngModel)]=\\\"form.firstName\\\" #firstName=\\\"ngModel\\\" required />\\n        <div *ngIf=\\\"f.submitted && firstName.invalid\\\">\\n          <div *ngIf=\\\"firstName.errors.required\\\">First Name is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastName\\\">Your first name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.lastName\\\" #lastName=\\\"ngModel\\\" required />\\n        <div *ngIf=\\\"f.submitted && lastName.invalid\\\">\\n          <div *ngIf=\\\"lastName.errors.required\\\">Last Name is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\n               required />\\n        <div *ngIf=\\\"f.submitted && username.invalid\\\">\\n          <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" #email=\\\"ngModel\\\" required email />\\n        <div *ngIf=\\\"f.submitted && email.invalid\\\">\\n          <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n          <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"sex\\\">Sex</label>\\n        <select class=\\\"form-control\\\" id=\\\"sex\\\" name=\\\"sex\\\" [(ngModel)]=\\\"form.sex\\\" #sex=\\\"ngModel\\\" required>\\n          <option value=\\\"female\\\">Female</option>\\n          <option value=\\\"male\\\">Male</option>\\n        </select>\\n        <div *ngIf=\\\"f.submitted && sex.invalid\\\">\\n          <div *ngIf=\\\"sex.errors.required\\\">Sex is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" #password=\\\"ngModel\\\"\\n               required minlength=\\\"6\\\" />\\n        <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n          <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n          <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\">Register</button>\\n        <div *ngIf=\\\"f.submitted && isSignUpFailed\\\" class=\\\"alert alert-warning\\\">\\n          Signup failed!<br/>{{errorMessage}}\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\"","module.exports = \"<h4>Content from Server</h4>\\n{{board}}\\n{{errorMessage}}\\n\"","module.exports = \"h1.\\n  Main Page\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./components/home/home.component\";\nimport {UserComponent} from \"./components/user/user.component\";\nimport {AdminComponent} from \"./components/admin/admin.component\";\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {RegisterComponent} from \"./components/register/register.component\";\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'user',\n    component: UserComponent\n  },\n  {\n    path: 'admin',\n    component: AdminComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'signup',\n    component: RegisterComponent\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {TokenStorageService} from \"./shared/services/auth/token-storage.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent implements OnInit{\n  private roles: string[];\n  private authority: string;\n\n  constructor(private tokenStorage: TokenStorageService) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.roles = this.tokenStorage.getAuthorities();\n      this.roles.every(role => {\n        if (role === 'ROLE_ADMIN') {\n          this.authority = 'admin';\n          return false;\n        }\n        this.authority = 'user';\n        return true;\n      });\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { UserComponent } from './components/user/user.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {httpInterceptorProviders} from \"./shared/interceptors/auth.interceptor\";\nimport { MainPageComponent } from './main-page/main-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    UserComponent,\n    AdminComponent,\n    MainPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4uY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from \"../../shared/services/user.service\";\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.pug',\n  styleUrls: ['./admin.component.sass']\n})\nexport class AdminComponent implements OnInit {\n\n  board: string;\n  errorMessage: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getAdminBoard().subscribe(\n      data => {\n        this.board = data;\n      },\n      error => {\n        this.errorMessage = `${error.status}: ${JSON.parse(error.error).message}`;\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {TokenStorageService} from \"../../shared/services/auth/token-storage.service\";\n\ninterface Info {\n  token: string;\n  username: string;\n  authorities: string[];\n\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.pug',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent implements OnInit {\n\n  info: Info;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit() {\n    this.info = {\n      token: this.token.getToken(),\n      username: this.token.getUsername(),\n      authorities: this.token.getAuthorities()\n    }\n  }\n\n  logOut() {\n    this.token.signOut();\n    window.location.reload();\n  }\n\n  isLoggedIn(): boolean{\n    return this.info.token != null && this.info.authorities != null && this.info.username != null;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {LoginInfo} from \"../../shared/models/login-info.model\";\nimport {AuthService} from \"../../shared/services/auth/auth.service\";\nimport {TokenStorageService} from \"../../shared/services/auth/token-storage.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n  private loginInfo: LoginInfo;\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getAuthorities();\n    }\n  }\n\n  onSubmit() {\n    console.log(this.form);\n\n    this.loginInfo = new LoginInfo(\n      this.form.username,\n      this.form.password);\n\n    this.authService.attemptAuth(this.loginInfo).subscribe(\n      data => {\n        console.log(data);\n        this.tokenStorage.saveToken(data.token);\n        this.tokenStorage.saveUsername(data.username);\n        this.tokenStorage.saveAuthorities(data.authorities);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getAuthorities();\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage() {\n    window.location.reload();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {SignUpInfo} from \"../../shared/models/sign-up-info.model\";\nimport {AuthService} from \"../../shared/services/auth/auth.service\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.sass']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: any = {};\n  signUpInfo: SignUpInfo;\n  isSignedUp = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.signUpInfo = new SignUpInfo(\n      this.form.firstName,\n      this.form.lastName,\n      this.form.username,\n      this.form.email,\n      this.form.password,\n      this.form.sex);\n\n    this.authService.signUp(this.signUpInfo).subscribe(\n      data => {\n        console.log(data);\n        this.isSignedUp = true;\n        this.isSignUpFailed = false;\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLmNvbXBvbmVudC5zYXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from \"../../shared/services/user.service\";\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.sass']\n})\nexport class UserComponent implements OnInit {\n\n  board: string;\n  errorMessage: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUserBoard().subscribe(\n      data => {\n        this.board = data;\n      },\n      error => {\n        this.errorMessage = `${error.status}: ${JSON.parse(error.error).message}`;\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4tcGFnZS9tYWluLXBhZ2UuY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.pug',\n  styleUrls: ['./main-page.component.sass']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {TokenStorageService} from \"../services/auth/token-storage.service\";\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n  constructor(private token: TokenStorageService) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if(token != null) {\r\n      authReq = req.clone({headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token)});\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","export class LoginInfo {\n  username: string;\n  password: string;\n\n  constructor(username: string, password: string) {\n    this.username = username;\n    this.password = password;\n  }\n}\n","export class SignUpInfo {\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  roles: string[];\n  password: string;\n  sex: string;\n\n  constructor(firstName: string, lastName: string, username: string, email: string, password: string, sex: string) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.username = username;\n    this.email = email;\n    this.password = password;\n    this.roles = [\"user\"];\n    this.sex = sex;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {LoginInfo} from \"../../models/login-info.model\";\nimport {Observable} from \"rxjs\";\nimport {JwtResponse} from \"../../models/jwt-response.model\";\nimport {SignUpInfo} from \"../../models/sign-up-info.model\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loginUrl = 'http://localhost:8080/shared/sign-in';\n  private signUpUrl = 'http://localhost:8080/shared/sign-up';\n\n  constructor(private http: HttpClient) { }\n\n  attemptAuth(credentials: LoginInfo): Observable<JwtResponse> {\n    return this.http.post<JwtResponse>(this.loginUrl, credentials, httpOptions);\n  }\n\n  signUp(info: SignUpInfo): Observable<string> {\n    return this.http.post<string>(this.signUpUrl, info, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'Token';\nconst USERNAME_KEY = 'Username';\nconst AUTHORITIES_KEY = 'Authorities';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  private roles: Array<string> = [];\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUsername(username: string) {\n    window.sessionStorage.removeItem(USERNAME_KEY);\n    window.sessionStorage.setItem(USERNAME_KEY, username);\n  }\n\n  public getUsername(): string {\n    return sessionStorage.getItem(USERNAME_KEY);\n  }\n\n  public saveAuthorities(authorities: string[]) {\n    window.sessionStorage.removeItem(AUTHORITIES_KEY);\n    window.sessionStorage.setItem(AUTHORITIES_KEY, JSON.stringify(authorities));\n  }\n\n  public getAuthorities(): string[] {\n    this.roles = [];\n\n    if (sessionStorage.getItem(TOKEN_KEY)) {\n      JSON.parse(sessionStorage.getItem(AUTHORITIES_KEY)).forEach(authority => {\n        this.roles.push(authority.authority);\n      });\n    }\n\n    return this.roles;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private userUrl = 'http://localhost:8080/test/user';\n  private adminUrl = 'http://localhost:8080/test/admin';\n  private commonUrl = 'http://localhost:8080/test/common';\n\n  constructor(private http: HttpClient) { }\n\n  getUserBoard(): Observable<string> {\n    return this.http.get<string>(this.userUrl);\n  }\n\n  getAdminBoard(): Observable<string> {\n    return this.http.get<string>(this.adminUrl);\n  }\n\n  getCommonBoard(): Observable<string> {\n    return this.http.get<string>(this.commonUrl);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}